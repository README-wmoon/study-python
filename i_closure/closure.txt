클로저(closure, 폐쇄): 함수 안에 함수, 모듈화 -> 모듈화란 -> 여러개로 나누어져 쓰이는것
    함수가 정의된 시점의 변수를 기억하고, 이 변수를 나중에 참조 혹은 변경이 가능하도록 해준다.
    내부 영역에 선언된 변수(지역변수)는 외부에서 접근이 불가능하기 떄문에 데이터 은닉과 캡슐화을 할 수 있으며,
    -> 함수안에 함수를 써야 주문을 하고 배송을 할수 있게끔해야 된다 -> 주문 함수따로 배송함수 따로 쓰면 주문말고 배송을 쓸수 있기 떄문에
    -> 데이터 은닉과 캡슐화를 할 수 있다.
    함수가 종료된 이후에도 지역변수에 접근할 수 있기 때문에 데이터 지속성을 가지고 있다.
    또한 다른 함수를 인자로 받거나 리턴할 수 있는 함수형 프로그래밍(주소값)이 가능해진다.
    하지만 코드 복잡성이 증가하고 지역변수를 메모리에 유지하기 때문에 메모리 사용량이 증가될 수 있다. -> 목적에 맞게 써라

클로저 구현 코드
    def out(arg):
        local_variable = value

        def in(arg):
            #read local_variable
            value = operate something

            return value

        return in